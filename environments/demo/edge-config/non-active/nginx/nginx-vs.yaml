apiVersion: ratelimit.solo.io/v1alpha1
kind: RateLimitConfig
metadata:
  name: route-limit-foo
  namespace: gloo-system
spec:
  raw:
    descriptors:
    - key: generic_key
      rateLimit:
        requestsPerUnit: 4
        unit: MINUTE
      value: count
    rateLimits:
    - actions:
      - genericKey:
          descriptorValue: count
---
apiVersion: gateway.solo.io/v1
kind: VirtualService
metadata:
  name: nginx-vs
  namespace: gloo-system
spec:
  virtualHost:
    domains:
    - '*'
    routes:
    - matchers:
      - prefix: /foo
        methods:
         - GET
         - POST
      options:
        prefixRewrite: '/'
        autoHostRewrite: true
        headerManipulation:
          # add headers to all responses
          # returned by this route
          responseHeadersToAdd:
            - header:
                key: Strict-Transport-Security
                value: "max-age=31536000;"
              append: false
          requestHeadersToAdd:
            - header:
                key:  x-forwarded-proto
                value: https
              append: false
        rateLimitConfigs:
          refs:
          - name: route-limit-foo
            namespace: gloo-system
        transformations:
          responseTransformation:
            transformationTemplate:
              headers:
                content-type:
                  text: '{{ request_header("content-type") }}'
                Accept-Encoding:
                  text: '{{ request_header("accept-encoding") }}'
                X-Device-Platform:
                  text: 'fooplatform'  
                ":status":
                  text: '{% if header(":status") == "405" %}201{% else if header(":status") == "429" %}529{% else %}{{ header(":status") }}{% endif %}'  
              body:
                text: '{% if header(":status") == "429" %}{ "response_code": "529" }{% else if header(":status") == "405" %}{ "response_code": "201" }{% else %}{ "response_code": "201" }{% endif %}'
              parseBodyBehavior: DontParse
      routeAction:
        single:
          upstream:
            name: default-nginx-80
            namespace: gloo-system